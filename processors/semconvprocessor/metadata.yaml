type: semconv

status:
  class: processor
  stability:
    development: [metrics, traces, logs]

attributes:
  signal_type:
    description: The type of signal being processed
    type: string
    enum: [traces, metrics, logs]
  rule_id:
    description: The ID of the rule that matched
    type: string
  operation_type:
    description: The type of operation extracted from the span
    type: string
  error_type:
    description: The type of error encountered
    type: string
    enum: [validation, processing]
  mode:
    description: The processing mode (enrich or enforce)
    type: string
    enum: [enrich, enforce]

telemetry:
  metrics:
    processor_semconv_spans_processed:
      enabled: true
      description: Number of spans processed by the processor
      unit: "{spans}"
      sum:
        value_type: int
        monotonic: true
      attributes:
        - signal_type

    processor_semconv_span_names_enforced:
      enabled: true
      description: Number of span names changed to match semantic conventions
      unit: "{operations}"
      sum:
        value_type: int
        monotonic: true
      attributes:
        - rule_id
        - operation_type
        - mode

    processor_semconv_processing_duration:
      enabled: true
      description: Time taken to process a batch of telemetry
      unit: ms
      histogram:
        value_type: double
        bucket_boundaries: [0.01, 0.05, 0.1, 0.5, 1, 5, 10, 50, 100]
      attributes:
        - signal_type

    processor_semconv_errors:
      enabled: true
      description: Number of errors encountered during processing
      unit: "{errors}"
      sum:
        value_type: int
        monotonic: true
      attributes:
        - error_type

    processor_semconv_original_span_name_count:
      enabled: true
      description: Number of unique span names before enforcement
      unit: "{names}"
      gauge:
        value_type: int

    processor_semconv_reduced_span_name_count:
      enabled: true
      description: Number of unique span names after enforcement
      unit: "{names}"
      gauge:
        value_type: int
